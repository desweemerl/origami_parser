name: Elixir CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    name: Build and test
    runs-on: ubuntu-latest

    container:
      image: hexpm/elixir:${{ matrix.elixir }}-erlang-${{ matrix.erlang }}-ubuntu-${{ matrix.ubuntu }}

    strategy:
      matrix:
        elixir: ["1.11.0"]
        erlang: ["23.0"]
        ubuntu: ["bionic-20200219"]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Retrieve Mix Dependencies Cache
      uses: actions/cache@v2
      id: mix-cache # id to use in retrieve action
      with:
        path: deps
        key: ${{ runner.os }}-${{ matrix.erlang }}-${{ matrix.elixir }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

    - name: Install dependencies
      run: |
        apt-get update
        apt-get -y install git
        mix local.rebar --force
        mix local.hex --force
        mix deps.get
        mix compile

    - name: Check Formatting
      run: mix format --check-formatted

    - name: Run Credo
      run: mix credo --strict

    - name: Retrieve PLT Cache
      uses: actions/cache@v2
      id: plt-cache
      with:
        path: priv/plts
        key: ${{ runner.os }}-${{ matrix.erlang }}-${{ matrix.elixir }}-plts-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

    - name: Create PLTs
      if: steps.plt-cache.outputs.cache-hit != 'true'
      run: |
        mkdir -p priv/plts
        mix dialyzer --plt

    - name: Run dialyzer
      run: mix dialyzer --no-check --halt-exit-status

    - name: Run tests
      run: mix coveralls.github
      env:
        MIX_ENV: test
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
